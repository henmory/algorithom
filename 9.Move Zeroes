Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.

1.简单暴力的解法，找到第一个0的位置，然后找到后面不是0的数，两两交换，直到最后，但是这样效率太差，导致有些情况通不过验证

class Solution {
    
    //找到第一个0元素
    public int findFirstElementIndexIsZero(int[] nums, int start_index){
        while((nums[start_index] != 0) && (start_index < nums.length - 1)){
            start_index++;
        }
        return start_index;
    }
    
    //找到之后第一个非0元素
    public int findFirstElementIndexNotZeroAfterFirstZero(int[] nums, int start_index){
       
        while((nums[start_index] == 0) && (start_index < nums.length - 1)){
            start_index++;
        }
        
        return start_index;
    }
    
    public void swap(int[] nums, int start_index, int end_index){
        int temp = nums[end_index];
        nums[end_index] = nums[start_index];
        nums[start_index] = temp;
        
    }
    public void moveZeroes(int[] nums) {
        
        int zero_index = 0;
        int not_zero_index = zero_index + 1;
        
        while(zero_index < (nums.length - 1)){
            
            zero_index = findFirstElementIndexIsZero(nums, zero_index);
            System.out.println("第一零元素索引 = " + zero_index);
            
            //该元素不要是最后一个元素
            if(zero_index <  nums.length - 1){
                not_zero_index = findFirstElementIndexNotZeroAfterFirstZero(nums, zero_index + 1);
                System.out.println("第一非零元素索引 = " + not_zero_index);

                swap(nums, zero_index, not_zero_index);
                System.out.println("调整后新数组为 " + Arrays.toString(nums));

                zero_index++;   
            }
            
            
        }
        
    }
}


2. 找到第一个非0的元素，然后把他放到第一个0元素的位置，这个算法是最简单的

class Solution {
    
    public void moveZeroes(int[] nums) {
        
        int lastNotZeroIndex = 0;
        
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != 0){
                nums[lastNotZeroIndex++] = nums[i];
            }
        }
        
        while(lastNotZeroIndex < nums.length){
            nums[lastNotZeroIndex++] = 0;
        }
        
        
    }
}
